{"version":3,"file":"static/js/206.d925ab9b.chunk.js","mappings":"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","sources":["pages/HomePage.js","../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js","../node_modules/@mui/material/CssBaseline/CssBaseline.js","../node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js","../node_modules/@mui/system/esm/GlobalStyles/GlobalStyles.js","../node_modules/@mui/material/GlobalStyles/GlobalStyles.js"],"sourcesContent":["import { useAuth } from '../hooks/useAuth';\n\nimport { Box, Container, CssBaseline } from '@mui/material';\n\nexport default function HomePage() {\n  const { isLoggedIn, user } = useAuth();\n  return (\n    <>\n      <>\n        <CssBaseline />\n        <Container fixed>\n          <Box\n            sx={{\n              bgcolor: '#ECC424',\n              color: '#314448',\n              width: '50vh',\n              height: '20vh',\n              marginTop: '40px',\n              marginLeft: 'auto',\n              marginRight: 'auto',\n              borderRadius: '8px',\n            }}\n          >\n            {isLoggedIn && (\n              <h2\n                style={{\n                  textAlign: 'center',\n                  paddingTop: '20px',\n                  paddingBottom: '20px',\n                }}\n              >\n                Welcome, {user.name.toUpperCase()}.\n              </h2>\n            )}\n            {!isLoggedIn && (\n              <h2\n                style={{\n                  textAlign: 'center',\n                  paddingTop: '20px',\n                  paddingBottom: '20px',\n                }}\n              >\n                Wellcome to Phonebook! Please login or register.\n              </h2>\n            )}\n          </Box>\n        </Container>\n      </>\n    </>\n  );\n}\n","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && !theme.vars && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components;\n  const colorSchemeStyles = {};\n  if (enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n  let defaultStyles = _extends({\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  }, colorSchemeStyles);\n  const themeOverrides = (_theme$components = theme.components) == null || (_theme$components = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components.styleOverrides;\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n  return defaultStyles;\n};\n\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Global } from '@emotion/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\nexport default function GlobalStyles(props) {\n  const {\n    styles,\n    defaultTheme = {}\n  } = props;\n  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\n  return /*#__PURE__*/_jsx(Global, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes = {\n  defaultTheme: PropTypes.object,\n  styles: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.object, PropTypes.func])\n} : void 0;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as MuiGlobalStyles } from '@mui/styled-engine';\nimport useTheme from '../useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles({\n  styles,\n  themeId,\n  defaultTheme = {}\n}) {\n  const upperTheme = useTheme(defaultTheme);\n  const globalStyles = typeof styles === 'function' ? styles(themeId ? upperTheme[themeId] || upperTheme : upperTheme) : styles;\n  return /*#__PURE__*/_jsx(MuiGlobalStyles, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  defaultTheme: PropTypes.object,\n  /**\n   * @ignore\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool]),\n  /**\n   * @ignore\n   */\n  themeId: PropTypes.string\n} : void 0;\nexport default GlobalStyles;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as SystemGlobalStyles } from '@mui/system';\nimport defaultTheme from '../styles/defaultTheme';\nimport THEME_ID from '../styles/identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles(props) {\n  return /*#__PURE__*/_jsx(SystemGlobalStyles, _extends({}, props, {\n    defaultTheme: defaultTheme,\n    themeId: THEME_ID\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The styles you want to apply globally.\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool])\n} : void 0;\nexport default GlobalStyles;"],"names":["HomePage","_useAuth","useAuth","isLoggedIn","user","_jsx","_Fragment","children","_jsxs","CssBaseline","Container","fixed","Box","sx","bgcolor","color","width","height","marginTop","marginLeft","marginRight","borderRadius","style","textAlign","paddingTop","paddingBottom","name","toUpperCase","createStyled","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","props","styles","ownerState","root","concat","capitalize","String","maxWidth","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","useUtilityClasses","componentName","classes","slots","composeClasses","generateUtilityClass","options","arguments","length","undefined","_options$createStyled","createStyledComponent","_options$useThemeProp","useThemeProps","_options$componentNam","ContainerRoot","_ref","theme","_extends","boxSizing","display","_defineProperty","paddingLeft","spacing","paddingRight","breakpoints","up","_ref3","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","_ref4","Math","max","xs","React","ref","className","_props$component","component","_props$disableGutters","_props$fixed","_props$maxWidth","other","_objectWithoutPropertiesLoose","as","clsx","createContainer","styled","html","enableColorScheme","WebkitFontSmoothing","MozOsxFontSmoothing","WebkitTextSizeAdjust","vars","colorScheme","palette","mode","body","text","primary","typography","body1","backgroundColor","background","default","common","white","_props$enableColorSch","GlobalStyles","_theme$components","colorSchemeStyles","colorSchemes","entries","forEach","_scheme$palette","_ref2","_slicedToArray","key","scheme","getColorSchemeSelector","replace","defaultStyles","fontWeight","fontWeightBold","margin","themeOverrides","components","MuiCssBaseline","styleOverrides","_props$defaultTheme","globalStyles","themeInput","obj","Global","themeId","_ref$defaultTheme","upperTheme","useTheme","MuiGlobalStyles","SystemGlobalStyles","THEME_ID"],"sourceRoot":""}