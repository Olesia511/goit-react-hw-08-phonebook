{"version":3,"file":"static/js/791.d8e226fc.chunk.js","mappings":"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","sources":["pages/NotFoundPage.js","../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js","../node_modules/@mui/material/CssBaseline/CssBaseline.js","../node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js","../node_modules/@mui/system/esm/GlobalStyles/GlobalStyles.js","../node_modules/@mui/material/GlobalStyles/GlobalStyles.js","../node_modules/@mui/material/colors/blueGrey.js"],"sourcesContent":["import { Box, Button, Container, CssBaseline } from '@mui/material';\nimport { blueGrey } from '@mui/material/colors';\nimport { NavLink } from 'react-router-dom';\nimport { styled } from '@mui/material/styles';\n\nconst ColorButton = styled(Button)(({ theme }) => ({\n  color: theme.palette.getContrastText(blueGrey[500]),\n  backgroundColor: blueGrey[700],\n  '&:hover': { backgroundColor: blueGrey[900] },\n}));\n\nexport default function NotFoundPage() {\n  return (\n    <>\n      <CssBaseline />\n      <Container fixed>\n        <Box\n          sx={{\n            bgcolor: '#ECC424',\n            color: '#314448',\n            width: '50vh',\n            marginTop: '40px',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            padding: '16px',\n            borderRadius: '8px',\n          }}\n        >\n          <h3 style={{ textAlign: 'center' }}>Sorry, no such page exists.</h3>\n          <ColorButton\n            variant=\"contained\"\n            type=\"submit\"\n            sx={{\n              bgcolor: '#314448',\n              color: '#ECC424',\n              fontWeight: '600',\n            }}\n          >\n            <NavLink\n              style={{\n                color: 'inherit',\n                padding: '12px',\n                textDecoration: 'none',\n                fontSize: '16px ',\n                fontWeight: '600',\n                textAlign: 'center',\n                display: 'block',\n                width: '100%',\n                fontStyle: 'italic',\n              }}\n              to=\"/\"\n            >\n              You can go to the main page.\n            </NavLink>\n          </ColorButton>\n        </Box>\n      </Container>\n    </>\n  );\n}\n","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && !theme.vars && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components;\n  const colorSchemeStyles = {};\n  if (enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n  let defaultStyles = _extends({\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  }, colorSchemeStyles);\n  const themeOverrides = (_theme$components = theme.components) == null || (_theme$components = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components.styleOverrides;\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n  return defaultStyles;\n};\n\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Global } from '@emotion/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\nexport default function GlobalStyles(props) {\n  const {\n    styles,\n    defaultTheme = {}\n  } = props;\n  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\n  return /*#__PURE__*/_jsx(Global, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes = {\n  defaultTheme: PropTypes.object,\n  styles: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.object, PropTypes.func])\n} : void 0;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as MuiGlobalStyles } from '@mui/styled-engine';\nimport useTheme from '../useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles({\n  styles,\n  themeId,\n  defaultTheme = {}\n}) {\n  const upperTheme = useTheme(defaultTheme);\n  const globalStyles = typeof styles === 'function' ? styles(themeId ? upperTheme[themeId] || upperTheme : upperTheme) : styles;\n  return /*#__PURE__*/_jsx(MuiGlobalStyles, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  defaultTheme: PropTypes.object,\n  /**\n   * @ignore\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool]),\n  /**\n   * @ignore\n   */\n  themeId: PropTypes.string\n} : void 0;\nexport default GlobalStyles;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as SystemGlobalStyles } from '@mui/system';\nimport defaultTheme from '../styles/defaultTheme';\nimport THEME_ID from '../styles/identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles(props) {\n  return /*#__PURE__*/_jsx(SystemGlobalStyles, _extends({}, props, {\n    defaultTheme: defaultTheme,\n    themeId: THEME_ID\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The styles you want to apply globally.\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool])\n} : void 0;\nexport default GlobalStyles;","const blueGrey = {\n  50: '#eceff1',\n  100: '#cfd8dc',\n  200: '#b0bec5',\n  300: '#90a4ae',\n  400: '#78909c',\n  500: '#607d8b',\n  600: '#546e7a',\n  700: '#455a64',\n  800: '#37474f',\n  900: '#263238',\n  A100: '#cfd8dc',\n  A200: '#b0bec5',\n  A400: '#78909c',\n  A700: '#455a64'\n};\nexport default blueGrey;"],"names":["ColorButton","styled","Button","_ref","color","theme","palette","getContrastText","blueGrey","backgroundColor","NotFoundPage","_jsxs","_Fragment","children","_jsx","CssBaseline","Container","fixed","Box","sx","bgcolor","width","marginTop","marginLeft","marginRight","padding","borderRadius","style","textAlign","variant","type","fontWeight","NavLink","textDecoration","fontSize","display","fontStyle","to","createStyled","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","overridesResolver","props","styles","ownerState","root","concat","capitalize","String","maxWidth","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","useUtilityClasses","componentName","classes","slots","composeClasses","generateUtilityClass","options","arguments","length","undefined","_options$createStyled","createStyledComponent","_options$useThemeProp","useThemeProps","_options$componentNam","ContainerRoot","_extends","boxSizing","_defineProperty","paddingLeft","spacing","paddingRight","breakpoints","up","_ref3","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","_ref4","Math","max","xs","React","ref","className","_props$component","component","_props$disableGutters","_props$fixed","_props$maxWidth","other","_objectWithoutPropertiesLoose","as","clsx","createContainer","html","enableColorScheme","WebkitFontSmoothing","MozOsxFontSmoothing","WebkitTextSizeAdjust","vars","colorScheme","mode","body","text","primary","typography","body1","background","default","common","white","_props$enableColorSch","GlobalStyles","_theme$components","colorSchemeStyles","colorSchemes","entries","forEach","_scheme$palette","_ref2","_slicedToArray","key","scheme","getColorSchemeSelector","replace","defaultStyles","fontWeightBold","margin","themeOverrides","components","MuiCssBaseline","styleOverrides","_props$defaultTheme","globalStyles","themeInput","obj","Global","themeId","_ref$defaultTheme","upperTheme","useTheme","MuiGlobalStyles","SystemGlobalStyles","THEME_ID","A100","A200","A400","A700"],"sourceRoot":""}